name: kwant-api-automation

on:
  workflow_dispatch:

jobs:
  run-api-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    env:
      COLLECTION_UID: ${{ secrets.COLLECTION_UID }}
      POSTMAN_API_KEY: ${{ secrets.POSTMAN_API_KEY }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}

    steps:
      - name: üõí Checkout Repository
        uses: actions/checkout@v3

      - name: ‚öôÔ∏è Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: üì¶ Install Dependencies
        run: npm install

      - name: üöÄ Run Newman Tests
        id: newman
        continue-on-error: true
        run: |
          npm run test | tee newman_output.txt

          TOTAL=$(grep -o "Total requests: [0-9]*" newman_output.txt | awk '{print $3}' || echo 0)
          FAILED=$(grep -o "Failed assertions: [0-9]*" newman_output.txt | awk '{print $3}' || echo 0)
          PASSED=$((TOTAL - FAILED))
          SKIPPED=0
          SUCCESS_RATE=0

          if [[ $TOTAL -gt 0 ]]; then
            SUCCESS_RATE=$(awk "BEGIN {printf \"%.2f\", ($PASSED/$TOTAL) * 100}")
          fi

          TOTAL_TIME=$(grep -o "completed in .*" newman_output.txt | awk '{print $3}' || echo "N/A")
          TIMESTAMP=$(date -u '+%Y-%m-%d %H:%M:%S UTC')

          echo "total=$TOTAL" >> $GITHUB_OUTPUT
          echo "passed=$PASSED" >> $GITHUB_OUTPUT
          echo "failed=$FAILED" >> $GITHUB_OUTPUT
          echo "skipped=$SKIPPED" >> $GITHUB_OUTPUT
          echo "success_rate=$SUCCESS_RATE" >> $GITHUB_OUTPUT
          echo "total_time=$TOTAL_TIME" >> $GITHUB_OUTPUT
          echo "timestamp=$TIMESTAMP" >> $GITHUB_OUTPUT

      - name: üåç Deploy Allure Report to Surge
        if: always()
        run: |
          npx surge ./allure-report https://kwant-automation-dashboard.surge.sh --token $SURGE_TOKEN

            - name: üí¨ Send Slack Notification
          if: always()
          run: |
          TOTAL="${{ steps.newman.outputs.total }}"
          PASSED="${{ steps.newman.outputs.passed }}"
          FAILED="${{ steps.newman.outputs.failed }}"
          SKIPPED="${{ steps.newman.outputs.skipped }}"
          SUCCESS_RATE="${{ steps.newman.outputs.success_rate }}"
          TOTAL_TIME="${{ steps.newman.outputs.total_time }}"
          TIMESTAMP="${{ steps.newman.outputs.timestamp }}"

          if [[ "$FAILED" -eq 0 && "$TOTAL" -gt 0 ]]; then
            STATUS="API tests completed successfully"
            COLOR="good"
          elif [[ "$TOTAL" -eq 0 ]]; then
            STATUS="API tests did not run properly"
            COLOR="warning"
          else
            STATUS="API tests failed"
            COLOR="danger"
          fi

          PAYLOAD=$(jq -n \
            --arg color "$COLOR" \
            --arg status "$STATUS" \
            --arg total "$TOTAL" \
            --arg passed "$PASSED" \
            --arg failed "$FAILED" \
            --arg skipped "$SKIPPED" \
            --arg success_rate "$SUCCESS_RATE%" \
            --arg total_time "$TOTAL_TIME" \
            --arg timestamp "$TIMESTAMP" \
            --arg report_url "https://kwant-automation-dashboard.surge.sh/" \
            '{
              attachments: [
                {
                  color: $color,
                  title: $status,
                  fields: [
                    {title: "Total Tests", value: $total, short: true},
                    {title: "Passed", value: $passed, short: true},
                    {title: "Failed", value: $failed, short: true},
                    {title: "Skipped", value: $skipped, short: true},
                    {title: "Success Rate", value: $success_rate, short: true},
                    {title: "Total Time", value: $total_time, short: true},
                    {title: "Last Checked", value: $timestamp, short: false}
                  ],
                  actions: [
                    {
                      type: "button",
                      text: "View Detailed Report",
                      url: $report_url
                    }
                  ]
                }
              ]
            }')

          curl -X POST -H 'Content-type: application/json' \
            --data "$PAYLOAD" \
            "$SLACK_WEBHOOK_URL"

